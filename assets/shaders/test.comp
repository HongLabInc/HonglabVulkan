#version 450

layout (local_size_x = 16, local_size_y = 16) in;

layout (set = 0, binding = 0, rgba8) uniform readonly image2D inputImage;
layout (set = 0, binding = 1, rgba32f) uniform writeonly image2D outputImage;

void main() 
{
    ivec2 imageCoords = ivec2(gl_GlobalInvocationID.xy);
    
    // Get image dimensions
    ivec2 imageDims = imageSize(inputImage);
    
    // Check if coordinates are within image bounds
    if (imageCoords.x >= imageDims.x || imageCoords.y >= imageDims.y) {
        return;
    }
    
    vec4 color = imageLoad(inputImage, imageCoords);

    // Determine which half of the image we're in
    int halfWidth = int(imageDims.x * 0.4);
    
    if (imageCoords.x < halfWidth) {
        // Left half: tint red
        color.rgb *= vec3(1.0, 0.5, 0.5); // Reduce green and blue components
    } else {
        // Right half: tint blue
        color.rgb *= vec3(0.5, 0.5, 1.0); // Reduce red and green components
    }

    imageStore(outputImage, imageCoords, color);
}
