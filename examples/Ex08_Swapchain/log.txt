GlfwRequiredInstanceExtensions: 2
  VK_KHR_surface
  VK_KHR_win32_surface
Supported Instance Extensions:
  VK_KHR_device_group_creation
  VK_KHR_display
  VK_KHR_external_fence_capabilities
  VK_KHR_external_memory_capabilities
  VK_KHR_external_semaphore_capabilities
  VK_KHR_get_display_properties2
  VK_KHR_get_physical_device_properties2
  VK_KHR_get_surface_capabilities2
  VK_KHR_surface
  VK_KHR_surface_protected_capabilities
  VK_KHR_win32_surface
  VK_EXT_debug_report
  VK_EXT_debug_utils
  VK_EXT_direct_mode_display
  VK_EXT_surface_maintenance1
  VK_EXT_swapchain_colorspace
  VK_NV_external_memory_capabilities
  VK_KHR_portability_enumeration
  VK_LUNARG_direct_driver_loading
Required Instance Extensions:
  VK_KHR_surface
  VK_KHR_win32_surface
  VK_KHR_portability_enumeration
  VK_EXT_debug_utils
Available instance layers:
  VK_LAYER_EOS_Overlay
  VK_LAYER_EOS_Overlay
  VK_LAYER_KHRONOS_profiles
  VK_LAYER_KHRONOS_shader_object
  VK_LAYER_KHRONOS_synchronization2
  VK_LAYER_KHRONOS_validation
  VK_LAYER_LUNARG_api_dump
  VK_LAYER_LUNARG_crash_diagnostic
  VK_LAYER_LUNARG_gfxreconstruct
  VK_LAYER_LUNARG_monitor
  VK_LAYER_LUNARG_screenshot
  VK_LAYER_NV_optimus
  VK_LAYER_NV_present
  VK_LAYER_OBS_HOOK
  VK_LAYER_RENDERDOC_Capture
  VK_LAYER_RTSS
  VK_LAYER_VALVE_steam_fossilize
  VK_LAYER_VALVE_steam_overlay

Available physical devices: 2
  0 NVIDIA GeForce RTX 4090 Laptop GPU (Discrete GPU)
  1 Intel(R) RaptorLake-S Mobile Graphics Controller (Integrated GPU)
Selected NVIDIA GeForce RTX 4090 Laptop GPU (Discrete GPU)
  nonCoherentAtomSize: 64
  Max UBO size: 64 KBytes
  Max SSBO size: 4194303 KBytes
  UBO offset alignment: 64
  SSBO offset alignment: 16

Device Features:
  geometryShader: YES
  tessellationShader: YES

Device Memory Properties:
  Memory Type Count: 5
    Memory Type 0: heap 1, flags: NONE 
    Memory Type 1: heap 0, flags: DEVICE_LOCAL 
    Memory Type 2: heap 1, flags: HOST_VISIBLE HOST_COHERENT 
    Memory Type 3: heap 1, flags: HOST_VISIBLE HOST_COHERENT HOST_CACHED 
    Memory Type 4: heap 0, flags: DEVICE_LOCAL HOST_VISIBLE HOST_COHERENT 
  Memory Heap Count: 2
    Memory Heap 0: 16050 MB, flags: DEVICE_LOCAL 
    Memory Heap 1: 16253 MB, flags: NONE 

Queue Family Properties: 6
  Queue Family 0: 16 queues, flags: GRAPHICS COMPUTE TRANSFER SPARSE_BINDING 
  Queue Family 1: 2 queues, flags: TRANSFER SPARSE_BINDING 
  Queue Family 2: 8 queues, flags: COMPUTE TRANSFER SPARSE_BINDING 
  Queue Family 3: 1 queues, flags: TRANSFER SPARSE_BINDING VIDEO_DECODE 
  Queue Family 4: 2 queues, flags: TRANSFER SPARSE_BINDING VIDEO_ENCODE 
  Queue Family 5: 1 queues, flags: TRANSFER SPARSE_BINDING OPTICAL_FLOW 
DescriptorPoolSize.txt not found, will create pools on-demand
Swapchain Storage Bit Support: YES
Designed Num of Swamchain Images: 3

Added VK_IMAGE_USAGE_STORAGE_BIT to swapchain

[ERROR] [-72737220][VUID-vkQueueSubmit2-semaphore-03868] : vkQueueSubmit2(): pSubmits[0].pSignalSemaphoreInfos[0].semaphore (VkSemaphore 0x100000000010) is being signaled by VkQueue 0x194c7114b80, but it may still be in use by VkSwapchainKHR 0x60000000006.
Here are the most recently acquired image indices: 0, 1, 2, 0, [1], 2, 0, 0.
(brackets mark the last use of VkSemaphore 0x100000000010 in a presentation operation)
Swapchain image 1 was presented but was not re-acquired, so VkSemaphore 0x100000000010 may still be in use and cannot be safely reused with image index 0.
Vulkan insight: One solution is to assign each image its own semaphore. This also handles the case where vkAcquireNextImageKHR returns the same index twice in a row. Here are some common methods to ensure that a semaphore passed to vkQueuePresentKHR is not in use and can be safely reused:
	a) Use a separate semaphore per swapchain image. Index these semaphores using the index of the acquired image.
	b) Consider the VK_KHR_swapchain_maintenance1 extension. It allows using a VkFence with the presentation operation.
The Vulkan spec states: The semaphore member of any binary semaphore element of the pSignalSemaphoreInfos member of any element of pSubmits must be unsignaled when the semaphore signal operation it defines is executed on the device (https://vulkan.lunarg.com/doc/view/1.4.321.1/windows/antora/spec/latest/chapters/cmdbuffers.html#VUID-vkQueueSubmit2-semaphore-03868)
